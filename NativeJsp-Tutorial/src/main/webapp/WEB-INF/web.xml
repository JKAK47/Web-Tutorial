<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee">

    <!-- Servlet3.1 begin tomcat8.0.x
            servlet 3.1 JSP 2.3, EL 3.0
            -->
    <!-- display-name 可有可无-->
    <display-name>NativeJSP-WebApp</display-name>
    <!--
        如果用户长时间没有访问服务器，超过了会话最大超时时间 ，服务器就会自动销毁超时的session
        会话超时时间可以在web.xml中进行设置，为了容易看到超时效果，我们将超时时间设置为最小值。
     -->
    <session-config>
        <session-timeout>1</session-timeout>
    </session-config>

    <!-- 定义全局变量 -->
    <context-param>
        <param-name>nativejsp</param-name>
        <param-value>javaweb-100</param-value>
    </context-param>
    <!-- filter begin-->
    <!-- gzip 压缩 filter -->
    <filter>
        <filter-name>GzipFilter</filter-name>
        <filter-class>org.vincent.filter.gzip.GZipServletFilter</filter-class>
        <init-param>
            <param-name>zipFilter</param-name>
            <param-value>helloFilter</param-value>
        </init-param>
        <!-- 设置是否支持 异步 schema 语法校验有问题但是能启动web 应用 -->
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.html</url-pattern>
        <url-pattern>*.jsp</url-pattern>
        <!-- url-pattern : /* 存在对 forward 转发请求问题 -->
        <url-pattern>/</url-pattern>
        <url-pattern>/*</url-pattern>
        <!-- 对这个url-pattern 模式过滤器规则 只是过滤来自于原始客户端的请求进行过滤
            总共有五个过滤场景：
            REQUEST 过滤来自于客户端原始请求
            FORWARD 过滤来自于RequestDispatcher.forward 调用分派过来的请求
            INCLUDE 过滤来自于RequestDispatcher.include 调用分派过来的请求
            ERROR 过滤 来自于错误页面机制的请求
            ASYNC 过滤来自于 AsyncContext 分发过来的请求
         -->
        <dispatcher>REQUEST</dispatcher>
        <!--<dispatcher>FORWARD</dispatcher>-->
    </filter-mapping>

    <!-- gzip 压缩 filter -->
    <filter>
        <filter-name>oneFilter</filter-name>
        <filter-class>org.vincent.filter.OneFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>oneFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>
    <!-- listener setting-->
    <!-- listener 监听 ServletContext 初始化和销毁  -->
    <!--<listener>
        <listener-class>org.vincent.listener.MyServletContextListener</listener-class>
    </listener>-->
    <!-- filter stop-->

    <!-- 定义一个处理 获取新闻数据的servlet
      通过 /news访问
      https://blog.csdn.net/icarus_wang/article/details/51649635

     -->
    <servlet>
        <servlet-name>newsServlet</servlet-name>
        <servlet-class>org.vincent.servlet.NewsServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>newsServlet</servlet-name>
        <url-pattern>/newsA</url-pattern>
        <!--<url-pattern>/newsA/*</url-pattern>-->
    </servlet-mapping>

    <!-- 定义一个login servlet ，并通过font/userlist.jsp 返回登入login 的输入信息 -->
    <servlet>
        <servlet-name>registerServlet</servlet-name>
        <servlet-class>org.vincent.servlet.RegisterServlet</servlet-class>
        <init-param>
            <param-name>registerone</param-name>
            <param-value>50</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>registerServlet</servlet-name>
        <url-pattern>/register</url-pattern>
    </servlet-mapping>


    <!-- forward begin-->
    <servlet>
        <servlet-name>ForwardServlet1</servlet-name>
        <servlet-class>org.vincent.servlet.forward.ForwardServlet1</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ForwardServlet1</servlet-name>
        <url-pattern>/forwardservlet1</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ForwardServlet2</servlet-name>
        <servlet-class>org.vincent.servlet.forward.ForwardServlet2</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ForwardServlet2</servlet-name>
        <url-pattern>/forwardservlet2</url-pattern>
    </servlet-mapping>
    <!-- forward stop-->

    <!-- include begin-->
    <servlet>
        <servlet-name>IncludeServlet1</servlet-name>
        <servlet-class>org.vincent.servlet.include.IncludeServlet1</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>IncludeServlet1</servlet-name>
        <url-pattern>/includeservlet1</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>IncludeServlet2</servlet-name>
        <servlet-class>org.vincent.servlet.include.IncludeServlet2</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>IncludeServlet2</servlet-name>
        <url-pattern>/includeservlet2</url-pattern>
    </servlet-mapping>
    <!-- include stop -->

    <!-- 声明式异常处理机制 -->
    <!-- <error-page>
         <exception-type>java.lang.NumberFormatException</exception-type>
         <location>/WEB-INF/error/NumberFormateException.jsp</location>
     </error-page>-->
    <!-- 声明式异常处理机制 -->

    <!-- 欢迎页面设置匹配规则 -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>default.jsp</welcome-file>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>


</web-app>
